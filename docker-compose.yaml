version: '3.5'

services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PROD_PASSWORD}
      MYSQL_DATABASE: ${DB_PROD_NAME}
      MYSQL_USER: ${DB_PROD_USERNAME}
      MYSQL_PASSWORD: ${DB_PROD_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - ${DB_PROD_PORT}:3306
    networks:
      - app_network
    restart: unless-stopped

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_PROD_USERNAME}
      PMA_PASSWORD: ${DB_PROD_PASSWORD}
      PMA_PORT: ${DB_PROD_PORT}
    ports:
      - 5050:80
    networks:
      - app_network
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:6.0
    ports:
      - 6379:6379
    networks:
      - app_network
    restart: unless-stopped

  company_data_management_app:
    container_name: company_data_management_app
    restart: always
    depends_on:
      - mysql
      - redis
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    networks:
      - app_network
    environment:
      - NODE_ENV=production
      - APP_PORT=${APP_PORT}
      - DB_PROD_HOST=${DB_PROD_HOST}
      - DB_PROD_PORT=${DB_PROD_PORT}
      - DB_PROD_USERNAME=${DB_PROD_USERNAME}
      - DB_PROD_PASSWORD=${DB_PROD_PASSWORD}
      - DB_PROD_NAME=${DB_PROD_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - REDIS_EXPIRE_TIME=${REDIS_EXPIRE_TIME}

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
  phpmyadmin_data:
